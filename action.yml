name: 'ECS Deploy Runner Invoker'
description: 'Invoke the ECS Deploy Runner from a GitHub Actions workflow'
inputs:
  gruntwork-installer-version:
    description: 'gruntwork-installer version'
    required: true
    default: 'v0.0.34'
  terraform-aws-ci-version:
    description: 'terraform-aws-ci version'
    required: true
    default: 'v0.29.10'
  terraform-aws-security-version:
    description: 'terraform-aws-security version'
    required: true
    default: 'v0.44.10'
  main-branch-name:
    description: 'Name of the main branch of the repository'
    required: true
    default: 'main'
  command:
    description: 'Command to run (plan/apply/docker-image-build)'
    required: true
  context:
    description: 'Context directory in which the deploy runner command will be invoked'
    required: true
  build_args:
    description: 'Build time arguments to use when building Docker images'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    # Set the git ref to the commit SHA when building from PRs, otherwise use the branch ref.
    # This is used for the terraform builder that accepts the SHA, and works around GitHub Actions inconsistencies
    # where refs/heads is not always prepended to the default environment variable values when referencing branches.
    - id: set-terraform-builder-ref
      run: |
        if [[ ! -z "$GITHUB_HEAD_REF" ]]; then
          echo 'TERRAFORM_REF=${{ github.event.pull_request.head.sha }}' >> $GITHUB_ENV
        else
          echo 'TERRAFORM_REF=$GITHUB_REF' >> $GITHUB_ENV
        fi
      shell: bash
    # Explicitly prepend refs/heads to PR HEAD branch name on PRs as GitHub Actions has no built in way to do that.
    # This is required because the kaniko script used with the Docker image builder can't properly parse a commit SHA
    # on checkouts.
    - id: set-docker-builder-ref
      run: |
        if [[ ! -z "$GITHUB_HEAD_REF" ]]; then
          echo 'DOCKER_REF=refs/heads/$GITHUB_HEAD_REF' >> $GITHUB_ENV
        else
          echo 'DOCKER_REF=$GITHUB_REF' >> $GITHUB_ENV
        fi
      shell: bash
    # Parse the release tag from the default environment variable as there is no built in one that doesn't prepend
    # refs/tags (and that prefix is annoying when trying to tag Docker images).
    - id: set-version
      run: |
        if [[ ! -z "$GITHUB_HEAD_REF" ]]; then
          echo 'VERSION=${{ github.event.pull_request.head.sha }}' >> $GITHUB_ENV
        else
          echo 'VERSION=${GITHUB_REF/refs\/tags\//}' >> $GITHUB_ENV
        fi
      shell: bash
    - id: set-build-args
      run: echo 'BUILD_ARGS=${{ inputs.build_args }}' >> $GITHUB_ENV
      shell: bash
    - id: set-context
      run: echo 'CONTEXT=${{ inputs.context }}' >> $GITHUB_ENV
      shell: bash
    - id: install-helpers
      run: ${{ github.action_path }}/helpers/install.sh ${{ inputs.gruntwork-installer-version }} ${{ inputs.terraform-aws-ci-version }} ${{ inputs.terraform-aws-security-version }}
      shell: bash
    - id: run-command
      run: ${{ github.action_path }}/helpers/deploy.sh ${{ env.AWS_ACCOUNT_ID }} ${{ env.AWS_REGION }} ${{ github.repository }}.git ${{ env.TERRAFORM_REF }} ${{ env.DOCKER_REF }} ${{ env.VERSION }} ${{ inputs.command }}
      shell: bash
